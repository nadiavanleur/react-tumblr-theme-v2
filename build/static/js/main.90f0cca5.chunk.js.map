{"version":3,"sources":["serviceWorker.js","components/Layout/index.js","helpers/tumblrApi.js","components/PostItem/photo.js","components/Tags/index.js","components/Notes/index.js","components/PostItem/index.js","components/PostItem/text.js","components/PostItem/quote.js","components/PostItem/link.js","components/PostItem/chat.js","components/PostItem/audio.js","components/PostItem/video.js","components/PostFilter/index.js","components/LoadPosts/index.js","components/Loading/index.js","components/PostsOverview/index.js","pages/Home/index.js","pages/Tagged/index.js","components/PostDetail/index.js","pages/Post/index.js","components/Routes/index.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Layout","children","sidebarChildren","tumblrData","className","to","maxContentWidth","style","maxWidth","BASE_URL","getSlug","url","split","getBlogUrl","blogID","indexOf","addParams","baseUrl","params","newUrl","Object","keys","forEach","key","value","PhotoPostItem","post","photos","photoWidth","length","map","photo","src","original_size","alt","caption","image_permalink","href","link","Tags","tags","tag","Notes","notes","note","type","Date","timestamp","toLocaleString","blog_url","blog_name","POST_TYPES","text","isReblogged","title","dangerouslySetInnerHTML","__html","body","quote","source","excerpt","link_author","publisher","chat","dialogue","item","name","phrase","audio","player","embed","video","embed_code","PostItem","props","state","avatar","this","isOverviewItem","postFooter","postUsername","postDate","postType","postLink","postPlayCount","postNoteCount","postNotesList","postTagsList","reblogged_root_id","PostItemType","postDateObj","currentDateObj","post_url","target","reblogged_root_url","reblogged_root_name","description","date","format","getFullYear","note_count","plays","rel","Component","PostFilter","showTag","defaultValue","onChange","resultCount","overview","filterType","htmlFor","id","filterTag","filterOriginalContent","defaultProps","LoadPosts","loadMore","posts","filters","isLoading","totalPosts","setState","callback","$","ajax","dataType","success","response","error","console","getTumblrPosts","data","total_posts","offset","limit","tagFilter","React","createRef","reblog_info","notes_info","infiniteScrolling","addEventListener","innerHeight","document","documentElement","scrollTop","offsetHeight","hasResults","Loading","PostsOverview","handleFilterChange","e","checked","clearTimeout","filterChangeTimeout","setTimeout","showFilter","showOriginalContentOnly","JSON","stringify","postsWithFilter","filter","id_string","onClick","disabled","Home","Tagged","PostDetail","Post","Routes","exact","path","component","App","log","warn","blogUrl","copyrightYears","customCss","favicon","isIndexPage","isPermalinkPage","isSearchPage","metaDescription","noSearchResults","portraitUrl128","portraitUrl16","portraitUrl24","portraitUrl30","portraitUrl40","portraitUrl48","portraitUrl64","portraitUrl96","rss","safeSearchQuery","searchPlaceHolder","searchQuery","general","layout","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.90f0cca5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Layout = ({ children, sidebarChildren }) => {\n  const { tumblrData } = window;\n\n  return (\n    <div className=\"o-layout o-layout--gutter-base\">\n      <div className=\"o-layout__cell o-layout__cell--fit\">\n        <aside className=\"c-sidebar\">\n          <nav className=\"c-sidebar__nav\">\n            <ul className=\"o-list-clean\">\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/tagged/yeet\">tagged: yeet</Link>\n              </li>\n            </ul>\n          </nav>\n          <div>{sidebarChildren}</div>\n        </aside>\n      </div>\n      <div className=\"o-layout__cell o-layout__cell--fill\">\n        <main\n          className={`o-retain${\n            tumblrData.maxContentWidth ? \"\" : \" o-retain--lap\"\n          }`}\n          style={{\n            maxWidth: tumblrData.maxContentWidth\n          }}\n        >\n          {children}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nLayout.propTypes = {};\n\nexport default Layout;\n","import $ from \"jquery\";\n\nconst API_KEY = \"3lRlLdZi1GsTGCpvpwXdHR2FwkCApeoK3hneUzy4e7YkEabdRq\";\nconst BASE_URL = \"https://api.tumblr.com/v2/\";\n\n/**\n * getSlug\n *\n * @param url [required] example: https://treattheyouthright.tumblr.com/post/[ID]\n *\n * @returns slug example: /post/[ID]\n */\nexport const getSlug = url => url.split(\".tumblr.com\")[1];\n\n/**\n * getBlogUrl\n *\n * @param blogID [required]\n *\n * @returns [blogID].tumblr.com\n */\nexport const getBlogUrl = blogID =>\n  blogID.indexOf(\".\") === -1 ? `${blogID}.tumblr.com` : blogID;\n\n/**\n * addParams\n *\n * @param {baseUrl} [required] string\n * @param {params} [optional] object\n *\n * @returns new url\n */\nexport const addParams = (baseUrl, params) => {\n  let newUrl = `${baseUrl}?api_key=${API_KEY}`;\n\n  if (params)\n    Object.keys(params).forEach(key => {\n      const value = params[key];\n      if (value) newUrl += `&${key}=${value}`;\n    });\n\n  return newUrl;\n};\n\n/**\n * getTumblrPosts\n *\n * @param {blogID} [required] if no tag\n * @param {tag} [required] if no blogID\n * @param {callback} [required]\n */\nexport const getTumblrPosts = ({ blogID, callback, ...params }) => {\n  const url = addParams(\n    `${BASE_URL}${blogID ? `blog/${getBlogUrl(blogID)}/posts` : `tagged`}`,\n    params\n  );\n\n  $.ajax({\n    type: \"GET\",\n    url: url,\n    dataType: \"jsonp\",\n    success: ({ response }) => callback(response),\n    error: error => console.error(error)\n  });\n};\n\n/**\n * getTumblrProfile\n *\n * @param {blogID} [required]\n * @param {callback} [required]\n */\nexport const getTumblrProfile = ({ blogID, callback }) => {\n  const url = addParams(`${BASE_URL}blog/${getBlogUrl(blogID)}/info`);\n\n  $.ajax({\n    type: \"GET\",\n    url: url,\n    dataType: \"jsonp\",\n    success: ({ response }) => callback(!!response.blog ? response.blog : null),\n    error: error => console.error(error)\n  });\n};\n\n/**\n * getTumblrProfileAvatar\n *\n * @param {blogID} [required]\n * @param {size} [optional] [16, 24, 30, 40, 48, 64, 96, 128, 512]\n * @param {callback} [required]\n */\nexport const getTumblrProfileAvatar = ({ blogID, callback, ...params }) => {\n  const url = addParams(`${BASE_URL}blog/${getBlogUrl(blogID)}/avatar`);\n\n  $.ajax({\n    type: \"GET\",\n    url: url,\n    dataType: \"jsonp\",\n    success: ({ response }) => callback(!!response.blog ? response.blog : null),\n    error: error => console.error(error)\n  });\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst PhotoPostItem = ({ post }) => {\n  if (!post.photos) return null;\n\n  let photoWidth = 1 / 3;\n  if (post.photos.length === 1) photoWidth = 1;\n  if (post.photos.length === 2) photoWidth = 1 / 2;\n\n  return (\n    <ul className=\"o-layout\">\n      {post.photos.map((photo) => (\n        <li\n          className={`o-layout_cell u-fraction--${photoWidth * 12}of12@from-md`}\n        >\n          <figure>\n            <img src={photo.original_size.url} alt={photo.caption} />\n            {photo.caption && (\n              <figcaption className=\"u-padding-left-base u-padding-right-base\">\n                {photo.caption}\n              </figcaption>\n            )}\n            <p>\n              {post.image_permalink && (\n                <a href={post.image_permalink}>Image permalink</a>\n              )}\n              {post.link && <a href={post.link}>Image link</a>}\n            </p>\n          </figure>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nPhotoPostItem.propTypes = {};\n\nexport default PhotoPostItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Tags = ({ tags }) => (\n  <div className=\"c-tags\">\n    <ul className=\"o-layout o-layout--gutter-base\">\n      {tags.map(tag => (\n        <li className=\"o-layout__cell o-layout__cell--fit\" key={tag}>\n          <Link to={`/tagged/${tag}`} className=\"c-tags__tag\">\n            {tag}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nTags.propTypes = {\n  tags: PropTypes.array.isRequired\n};\n\nexport default Tags;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notes = ({ notes }) => (\n  <table className=\"c-notes\">\n    <thead className=\"u-visually-hidden\">\n      <tr>\n        <th>Type</th>\n        <th>Date</th>\n        <th>User</th>\n      </tr>\n    </thead>\n    <tbody>\n      {notes.map(note => (\n        <tr className=\"c-notes__note\">\n          <td className=\"c-notes__note-type\">{note.type}</td>\n          <td className=\"c-notes__note-time\">\n            {new Date(note.timestamp * 1000).toLocaleString()}\n          </td>\n          <td className=\"c-notes__note-blog\">\n            <a href={note.blog_url}>{note.blog_name}</a>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nNotes.propTypes = {};\n\nexport default Notes;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { getSlug } from \"../../helpers/tumblrApi\";\n\nimport TextPostItem from \"./text\";\nimport PhotoPostItem from \"./photo\";\nimport QuotePostItem from \"./quote\";\nimport LinkPostItem from \"./link\";\nimport ChatPostItem from \"./chat\";\nimport AudioPostItem from \"./audio\";\nimport VideoPostItem from \"./video\";\nimport Tags from \"../Tags\";\nimport Notes from \"../Notes\";\n\nconst POST_TYPES = {\n  text: TextPostItem,\n  photo: PhotoPostItem,\n  quote: QuotePostItem,\n  link: LinkPostItem,\n  chat: ChatPostItem,\n  audio: AudioPostItem,\n  video: VideoPostItem\n};\n\nclass PostItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      avatar: null\n    };\n  }\n\n  render() {\n    const { tumblrData = {} } = window;\n    const { post, isOverviewItem } = this.props;\n    const {\n      postFooter,\n      postUsername,\n      postDate,\n      postType,\n      postLink,\n      postPlayCount,\n      postNoteCount,\n      postNotesList,\n      postTagsList\n    } = tumblrData[isOverviewItem ? \"overview\" : \"general\"];\n    const isReblogged = !!post.reblogged_root_id;\n    const PostItemType = POST_TYPES[post.type];\n    const postDateObj = post.timestamp && new Date(post.timestamp * 1000);\n    const currentDateObj = new Date();\n\n    return (\n      <article\n        className={`c-post-item c-post-item--${post.type} c-post-item--${\n          isReblogged ? \"reblogged\" : \"original\"\n        }`}\n      >\n        {PostItemType && <PostItemType post={post} isReblogged={isReblogged} />}\n        {postFooter && (\n          <footer className=\"c-post-item__footer\">\n            {postUsername && (\n              <div className=\"u-margin-bottom-small\">\n                <a\n                  href={getSlug(post.post_url)}\n                  target=\"_blank\"\n                  className=\"c-post-item__user-link\"\n                >\n                  {tumblrData.name}\n                </a>\n                {isReblogged && (\n                  <>\n                    {\"  ⇆  \"}\n                    <a\n                      href={post.reblogged_root_url}\n                      target=\"_blank\"\n                      className=\"c-post-item__user-link\"\n                    >\n                      {post.reblogged_root_name}\n                    </a>\n                  </>\n                )}\n              </div>\n            )}\n            {post.body && post.type !== \"text\" && post.type !== \"chat\" && (\n              <div\n                dangerouslySetInnerHTML={{ __html: post.body }}\n                className=\"c-editor-content c-editor-content--body u-margin-bottom-small\"\n              />\n            )}\n            {post.caption && (\n              <div\n                dangerouslySetInnerHTML={{ __html: post.caption }}\n                className=\"c-editor-content c-editor-content--caption u-margin-bottom-small\"\n              />\n            )}\n            {post.description && (\n              <div\n                dangerouslySetInnerHTML={{ __html: post.description }}\n                className=\"c-editor-content c-editor-content--description u-margin-bottom-small\"\n              />\n            )}\n            <ul className=\"o-layout o-layout--gutter-large o-layout--align-middle u-margin-bottom-small\">\n              {postDate && postDateObj && (\n                <li className=\"o-layout__cell o-layout__cell--fit\">\n                  <span className=\"c-post-item__date\">\n                    <Moment\n                      date={postDateObj}\n                      format={\n                        postDateObj.getFullYear() !==\n                        currentDateObj.getFullYear()\n                          ? \"D MMM YY\"\n                          : \"D MMM\"\n                      }\n                    />\n                  </span>\n                </li>\n              )}\n              {postType && (\n                <li className=\"o-layout__cell o-layout__cell--fit\">\n                  {post.type}\n                </li>\n              )}\n              {postNoteCount && (\n                <li className=\"o-layout__cell o-layout__cell--fit\">\n                  {!post.note_count && `No notes`}\n                  {post.note_count === 1 && `1 note`}\n                  {post.note_count > 1 &&\n                    `${post.note_count.toLocaleString(\"en-US\")} notes`}\n                </li>\n              )}\n              {postPlayCount && !!post.plays && (\n                <li className=\"o-layout__cell o-layout__cell--fit\">\n                  {post.plays === 1 && `Played once`}\n                  {post.plays > 1 &&\n                    `Played ${post.plays.toLocaleString(\"en-US\")} times`}\n                </li>\n              )}\n              {postLink && (\n                <li className=\"o-layout__cell o-layout__cell--fit\">\n                  <a\n                    href={getSlug(post.post_url)}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    See post\n                  </a>\n                </li>\n              )}\n            </ul>\n            {postNotesList && post.notes && !!post.notes.length && (\n              <div className=\"u-margin-bottom-small\">\n                <Notes notes={post.notes} />\n              </div>\n            )}\n            {postTagsList && post.tags && !!post.tags.length && (\n              <div className=\"u-margin-bottom-small\">\n                <Tags tags={post.tags} />\n              </div>\n            )}\n          </footer>\n        )}\n      </article>\n    );\n  }\n}\n\nPostItem.propTypes = {};\n\nexport default PostItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextPostItem = ({ post, isReblogged }) => (\n  <>\n    {post.title && <h3>{post.title}</h3>}\n    <div\n      dangerouslySetInnerHTML={{ __html: post.body }}\n      className=\"c-editor-content c-editor-content--body\"\n    />\n  </>\n);\n\nTextPostItem.propTypes = {};\n\nexport default TextPostItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst QuotePostItem = ({ post }) => (\n  <blockquote>\n    {post.text && (\n      <div\n        dangerouslySetInnerHTML={{ __html: post.text }}\n        className=\"c-editor-content c-post-item__quote\"\n      />\n    )}\n    {post.source && (\n      <footer\n        dangerouslySetInnerHTML={{ __html: `– ${post.source}` }}\n        className=\"c-editor-content\"\n      />\n    )}\n  </blockquote>\n);\n\nQuotePostItem.propTypes = {};\n\nexport default QuotePostItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PhotoPostItem from \"./photo\";\n\nconst LinkPostItem = ({ post }) => {\n  return (\n    <>\n      {post.photos && !!post.photos.length && <PhotoPostItem post={post} />}\n      <div className=\"u-padding-base u-padding-bottom-none\">\n        {post.title && <h3>{post.title}</h3>}\n        {post.excerpt && <p>{post.excerpt}</p>}\n        {post.link_author && <p>{post.link_author}</p>}\n        {post.url && (\n          <a href={post.url} title={post.url}>\n            <b>{post.publisher}</b>{\" \"}\n            <small>\n              <i>{post.url}</i>\n            </small>\n          </a>\n        )}\n      </div>\n    </>\n  );\n};\n\nLinkPostItem.propTypes = {};\n\nexport default LinkPostItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ChatPostItem = ({ post }) => (\n  <div className=\"u-padding-base u-padding-bottom-none\">\n    {post.title && <h3>{post.title}</h3>}\n    <table>\n      <tbody>\n        {post.dialogue.map(item => (\n          <tr>\n            <th>{item.name}</th>\n            <td>{item.phrase}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </div>\n);\n\nChatPostItem.propTypes = {};\n\nexport default ChatPostItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst AudioPostItem = ({ post }) => (\n  <>\n    {post.player ? (\n      <div\n        dangerouslySetInnerHTML={{ __html: post.player }}\n        className=\"c-editor-content\"\n      />\n    ) : (\n      <div\n        dangerouslySetInnerHTML={{ __html: post.embed }}\n        className=\"c-editor-content\"\n      />\n    )}\n  </>\n);\n\nAudioPostItem.propTypes = {};\n\nexport default AudioPostItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst VideoPostItem = ({ post }) => (\n  <div\n    dangerouslySetInnerHTML={{\n      __html: post.player[post.player.length - 1].embed_code,\n    }}\n    className=\"c-editor-content\"\n  />\n);\n\nVideoPostItem.propTypes = {};\n\nexport default VideoPostItem;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass PostFilter extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { tumblrData } = window;\n    const { showTag, defaultValue, onChange, resultCount } = this.props;\n\n    if (!tumblrData) return null;\n\n    return (\n      <div className=\"c-filter\">\n        <div className=\"o-layout o-layout--gutter-huge o-layout--align-middle\">\n          <div className=\"o-layout__cell o-layout__cell--fill\">\n            {resultCount && <span className=\"u-text-small\">{resultCount}</span>}\n          </div>\n          <div className=\"o-layout__cell o-layout__cell--fit\">\n            <div className=\"o-layout o-layout--gutter-large o-layout--align-right o-layout--align-middle\">\n              {tumblrData.overview.filterType && (\n                <div className=\"o-layout__cell o-layout__cell--fit\">\n                  <div className=\"o-layout o-layout--gutter-small o-layout--align-middle\">\n                    <div className=\"o-layout__cell o-layout__cell--fit\">\n                      <label htmlFor=\"filter-type\">Type post</label>\n                    </div>\n                    <div className=\"o-layout__cell o-layout__cell--fit\">\n                      <div className=\"e-select__container\">\n                        <select\n                          name=\"type\"\n                          id=\"filter-type\"\n                          defaultValue={defaultValue.type}\n                          onChange={onChange}\n                        >\n                          <option value=\"\">all</option>\n                          <option value=\"text\">text</option>\n                          <option value=\"photo\">photo</option>\n                          <option value=\"quote\">quote</option>\n                          <option value=\"link\">link</option>\n                          <option value=\"chat\">chat</option>\n                          <option value=\"audio\">audio</option>\n                          <option value=\"video\">video</option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {tumblrData.overview.filterTag && showTag && (\n                <div className=\"o-layout__cell o-layout__cell--fit\">\n                  <div className=\"o-layout o-layout--gutter-small o-layout--align-middle\">\n                    <div className=\"o-layout__cell o-layout__cell--fit\">\n                      <label htmlFor=\"filter-tag\">Tag</label>\n                    </div>\n                    <div className=\"o-layout__cell o-layout__cell--fit\">\n                      <input\n                        id=\"filter-tag\"\n                        name=\"tag\"\n                        type=\"text\"\n                        defaultValue={defaultValue.tag}\n                        onChange={onChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {tumblrData.overview.filterOriginalContent && (\n                <div className=\"o-layout__cell o-layout__cell--fit\">\n                  <div className=\"o-layout o-layout--gutter-small o-layout--align-middle\">\n                    <div className=\"o-layout__cell o-layout__cell--fit\">\n                      <label htmlFor=\"filter-original-content\">\n                        Show original content only\n                      </label>\n                    </div>\n                    <div className=\"o-layout__cell o-layout__cell--fit\">\n                      {\" \"}\n                      <input\n                        id=\"filter-original-content\"\n                        type=\"checkbox\"\n                        name=\"showOriginalContentOnly\"\n                        value={null}\n                        onChange={onChange}\n                      />\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPostFilter.defaultProps = {\n  defaultValue: {},\n  showTag: true\n};\n\nPostFilter.propTypes = {\n  defaultValue: PropTypes.shape({\n    blogID: PropTypes.string,\n    type: PropTypes.string,\n    id: PropTypes.string,\n    tag: PropTypes.string,\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    reblog_info: PropTypes.bool,\n    notes_info: PropTypes.bool,\n    filter: PropTypes.string,\n    before: PropTypes.string,\n    npf: PropTypes.bool\n  }),\n  showTag: PropTypes.bool\n};\n\nexport default PostFilter;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getTumblrPosts } from \"../../helpers/tumblrApi\";\n\nclass LoadPosts extends Component {\n  constructor(props) {\n    super(props);\n    this.tagFilter = React.createRef();\n\n    this.state = {\n      posts: [],\n      filters: {\n        offset: 0,\n        limit: 5,\n        reblog_info: true,\n        notes_info: true,\n        ...props.filters\n      },\n      totalPosts: null\n    };\n\n    if (window.tumblrData.infiniteScrolling)\n      window.addEventListener(\"scroll\", () => {\n        if (\n          window.innerHeight + document.documentElement.scrollTop ===\n          document.documentElement.offsetHeight\n        ) {\n          this.loadMore();\n        }\n      });\n\n    this.loadMore();\n  }\n\n  loadMore = () => {\n    const { posts, filters, isLoading, totalPosts } = this.state;\n\n    if (\n      isLoading ||\n      (typeof totalPosts === \"number\" && posts.length >= totalPosts)\n    )\n      return;\n\n    this.setState({ isLoading: true });\n\n    getTumblrPosts({\n      ...filters,\n      callback: data =>\n        this.setState({\n          posts: [...posts, ...data.posts],\n          totalPosts: data.total_posts,\n          filters: {\n            ...filters,\n            offset: filters.offset + filters.limit\n          },\n          isLoading: false\n        })\n    });\n  };\n\n  render() {\n    const { posts, totalPosts, isLoading, filters } = this.state;\n    const { children } = this.props;\n\n    const hasResults = !!posts && !!posts.length;\n\n    return (\n      <>\n        {children({\n          isLoading: isLoading || typeof totalPosts !== \"number\",\n          posts: hasResults && posts,\n          totalPosts: totalPosts,\n          loadMore: this.loadMore\n        })}\n      </>\n    );\n  }\n}\n\nLoadPosts.defaultProps = {\n  filters: {}\n};\n\nLoadPosts.propTypes = {\n  filters: PropTypes.shape({\n    blogID: PropTypes.string,\n    type: PropTypes.string,\n    id: PropTypes.string,\n    tag: PropTypes.string,\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    reblog_info: PropTypes.bool,\n    notes_info: PropTypes.bool,\n    filter: PropTypes.string,\n    before: PropTypes.string,\n    npf: PropTypes.bool\n  }),\n  children: PropTypes.func\n};\n\nexport default LoadPosts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Loading = () => {\n  return (\n    <div>\n      <span className=\"u-text-small\">Loading...</span> ☮︎\n    </div>\n  );\n};\n\nLoading.propTypes = {};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"../Layout\";\nimport { Link } from \"react-router-dom\";\nimport PostItem from \"../PostItem\";\nimport PostFilter from \"../PostFilter\";\nimport LoadPosts from \"../LoadPosts\";\nimport Loading from \"../Loading\";\n\nclass PostsOverview extends Component {\n  constructor(props) {\n    super(props);\n    this.tagFilter = React.createRef();\n\n    this.state = {\n      filters: {\n        ...props.filters\n      }\n    };\n  }\n\n  handleFilterChange = e => {\n    const { name, value, checked } = e.target;\n    const { filters } = this.state;\n\n    clearTimeout(this.filterChangeTimeout);\n\n    this.filterChangeTimeout = setTimeout(() => {\n      this.setState({\n        filters: {\n          ...filters,\n          [name]: value || checked || null\n        }\n      });\n    }, 350);\n  };\n\n  render() {\n    const { tumblrData } = window;\n    const { showFilter, showTag } = this.props;\n    const {\n      filters: { showOriginalContentOnly, ...filters }\n    } = this.state;\n    // console.log(filters);\n\n    return (\n      <LoadPosts filters={filters} key={`filter:${JSON.stringify(filters)}`}>\n        {({ isLoading, posts, totalPosts, loadMore }) => {\n          let postsWithFilter = posts;\n\n          if (showOriginalContentOnly)\n            postsWithFilter = postsWithFilter.filter(\n              post => !post.reblogged_root_id\n            );\n\n          return (\n            <>\n              {showFilter && (\n                <PostFilter\n                  defaultValue={filters}\n                  onChange={this.handleFilterChange}\n                  showTag={showTag}\n                  resultCount={`${\n                    !posts.length || isLoading ? \"☮︎\" : posts.length\n                  } of ${totalPosts || \"☮︎\"}`}\n                />\n              )}\n              {!isLoading && !postsWithFilter && <p>No results</p>}\n              {postsWithFilter && (\n                <ol className=\"o-list-clean\">\n                  {postsWithFilter.map(post => (\n                    <li\n                      className=\"u-margin-bottom-huge\"\n                      key={`post-${post.id_string}`}\n                    >\n                      <PostItem post={post} isOverviewItem />\n                    </li>\n                  ))}\n                </ol>\n              )}\n              {isLoading && showOriginalContentOnly && (\n                <p className=\"u-text-small\">\n                  <i>\n                    Newly loaded posts may not be visible since the \"Show\n                    original content only\"-filter is turned on.\n                  </i>\n                </p>\n              )}\n              {posts.length < totalPosts && (\n                <button\n                  onClick={loadMore}\n                  disabled={isLoading}\n                  className=\"c-button u-margin-bottom-huge\"\n                >\n                  {isLoading ? <Loading /> : \"Show more posts\"}\n                </button>\n              )}\n              {posts.length >= totalPosts && (\n                <p className=\"u-text-small\">\n                  <i>That was all ☮︎</i>\n                </p>\n              )}\n            </>\n          );\n        }}\n      </LoadPosts>\n    );\n  }\n}\n\nPostsOverview.defaultProps = {\n  filters: {},\n  showFilter: true\n};\n\nPostsOverview.propTypes = {\n  filters: PropTypes.shape({\n    blogID: PropTypes.string,\n    type: PropTypes.string,\n    id: PropTypes.string,\n    tag: PropTypes.string,\n    limit: PropTypes.number,\n    offset: PropTypes.number,\n    reblog_info: PropTypes.bool,\n    notes_info: PropTypes.bool,\n    filter: PropTypes.string,\n    before: PropTypes.string,\n    npf: PropTypes.bool\n  }),\n  showFilter: PropTypes.bool,\n  showTag: PropTypes.bool\n};\n\nexport default PostsOverview;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"../../components/Layout\";\nimport PostsOverview from \"../../components/PostsOverview\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <Layout>\n        <PostsOverview\n          filters={{\n            blogID: window.tumblrData.name\n          }}\n          showFilter\n        />\n      </Layout>\n    );\n  }\n}\n\nHome.propTypes = {};\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"../../components/Layout\";\nimport PostsOverview from \"../../components/PostsOverview\";\n\nclass Tagged extends Component {\n  render() {\n    const { tag } = this.props.match.params;\n\n    return (\n      <Layout>\n        <h3>tagged: {tag}</h3>\n        <PostsOverview\n          filters={{\n            blogID: window.tumblrData.name,\n            tag\n          }}\n          showFilter\n          showTag={false}\n        />\n      </Layout>\n    );\n  }\n}\n\nTagged.propTypes = {};\n\nexport default Tagged;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"../Layout\";\nimport LoadPosts from \"../LoadPosts\";\nimport PostItem from \"../PostItem\";\nimport Loading from \"../Loading\";\n\nconst PostDetail = props => {\n  const { filters } = props;\n\n  return (\n    <LoadPosts filters={filters}>\n      {({ posts, isLoading }) => {\n        if (isLoading) return <Loading />;\n        if (!isLoading && (!posts || !posts[0])) return <p>Post not found</p>;\n        return <PostItem post={posts[0]} />;\n      }}\n    </LoadPosts>\n  );\n};\n\nPostDetail.propTypes = {};\n\nexport default PostDetail;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"../../components/Layout\";\nimport PostDetail from \"../../components/PostDetail\";\n\nclass Post extends Component {\n  render() {\n    const { id } = this.props.match.params;\n\n    return (\n      <Layout>\n        <PostDetail\n          filters={{\n            blogID: window.tumblrData.name,\n            id\n          }}\n        />\n      </Layout>\n    );\n  }\n}\n\nPost.propTypes = {};\n\nexport default Post;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from \"../../pages/Home\";\nimport Tagged from \"../../pages/Tagged\";\nimport Post from \"../../pages/Post\";\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Route exact path=\"/\" component={Home} />\n    <Route path=\"/tagged/:tag\" component={Tagged} />\n    <Route path=\"/post/:id/:slug?\" component={Post} />\n  </BrowserRouter>\n);\n\nexport default Routes;\n","import React from 'react';\nimport Routes from './components/Routes';\n\nconst App = () => <Routes />\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\nimport \"./assets/scss/styles.scss\";\n\nif (typeof window !== \"undefined\") {\n  console.log(window.tumblrData);\n} else {\n  console.warn(\"window is undefined\");\n}\n\nif (typeof window === \"undefined\" || !window.tumblrData) {\n  window.tumblrData = {\n    blogUrl: \"https://treattheyouthright.tumblr.com/\",\n    copyrightYears: \"2018–2020\",\n    customCss: \"\",\n    description: \"OR R U MINE?\",\n    favicon: \"https://66.media.tumblr.com/avatar_720af10dbabb_128.pnj\",\n    isIndexPage: true,\n    isPermalinkPage: false,\n    isSearchPage: false,\n    metaDescription: \"OR R U MINE?\",\n    name: \"treattheyouthright\",\n    noSearchResults: false,\n    portraitUrl128: \"https://66.media.tumblr.com/avatar_720af10dbabb_128.pnj\",\n    portraitUrl16: \"https://66.media.tumblr.com/avatar_720af10dbabb_16.pnj\",\n    portraitUrl24: \"https://66.media.tumblr.com/avatar_720af10dbabb_24.pnj\",\n    portraitUrl30: \"https://66.media.tumblr.com/avatar_720af10dbabb_30.pnj\",\n    portraitUrl40: \"https://66.media.tumblr.com/avatar_720af10dbabb_40.pnj\",\n    portraitUrl48: \"https://66.media.tumblr.com/avatar_720af10dbabb_48.pnj\",\n    portraitUrl64: \"https://66.media.tumblr.com/avatar_720af10dbabb_64.pnj\",\n    portraitUrl96: \"https://66.media.tumblr.com/avatar_720af10dbabb_96.pnj\",\n    rss: \"https://treattheyouthright.tumblr.com/rss\",\n    safeSearchQuery: \"\",\n    searchPlaceHolder: \"Search treattheyouthright\",\n    searchQuery: \"\",\n    title: \"treattheyouthright\",\n    infiniteScrolling: true,\n    maxContentWidth: \"700px\",\n    general: {\n      postFooter: true,\n      postUsername: true,\n      postDate: true,\n      postType: true,\n      postLink: true,\n      postNoteCount: true,\n      postNotesList: true,\n      postTagsList: true\n    },\n    overview: {\n      layout: \"list\",\n      resultCount: true,\n      filter: true,\n      filterType: true,\n      filterTag: true,\n      filterOriginalContent: true,\n      postFooter: true,\n      postUsername: true,\n      postDate: true,\n      postType: true,\n      postLink: true,\n      postNoteCount: true,\n      postNotesList: false,\n      postTagsList: false\n    }\n  };\n}\n\nReactDOM.render(<App />, document.getElementById(\"tumblr-theme-app-root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}